cabal-version: 2.0

name: mitchell-stdlib
version: 0.1.0
build-type: Simple
category: Prelude
license: BSD3
license-file: LICENSE

--------------------------------------------------------------------------------
-- Flags
--------------------------------------------------------------------------------

----------------
-- Flags
-- default: True
----------------

flag bytestring
  description: bytestring dependency
  default: True
  manual: True

flag containers
  description: containers dependency
  default: True
  manual: True

flag text
  description: text dependency
  default: True
  manual: True

-----------------
-- Flags
-- default: False
-----------------

flag aeson
  description: aeson dependency
  default: False
  manual: True

flag ansi-terminal
  description: ansi-terminal dependency
  default: False
  manual: True

flag async
  description: async dependency
  default: False
  manual: True

flag atomic-primops
  description: atomic-primops dependency
  default: False
  manual: True

flag bits
  description: bits dependency
  default: False
  manual: True

flag bytestring-trie
  description: bytestring-trie dependency
  default: False
  manual: True

flag comonad
  description: comonad dependency
  default: False
  manual: True

flag compact
  description: compact dependency
  default: False
  manual: True

flag constraints
  description: constraints dependency
  default: False
  manual: True

flag contravariant
  description: contravariant dependency
  default: False
  manual: True

flag contravariant-extras
  description: contravariant-extras dependency
  default: False
  manual: True

flag deepseq
  description: deepseq dependency
  default: False
  manual: True

flag distributive
  description: distributive dependency
  default: False
  manual: True

flag dlist
  description: dlist dependency
  default: False
  manual: True

flag erf
  description: erf dependency
  default: False
  manual: True

flag extra
  description: extra dependency
  default: False
  manual: True

flag filepath
  description: filepath dependency
  default: False
  manual: True

flag foldl
  description: foldl dependency
  default: False
  manual: True

flag gauge
  description: gauge dependency
  default: False
  manual: True

flag hashable
  description: hashable dependency
  default: False
  manual: True

flag hedgehog
  description: hedgehog dependency
  default: False
  manual: True

flag heaps
  description: heaps dependency
  default: False
  manual: True

flag lens
  description: lens dependency
  default: False
  manual: True

flag list-transformer
  description: list-transformer dependency
  default: False
  manual: True

flag logict
  description: logict dependency
  default: False
  manual: True

flag managed
  description: managed dependency
  default: False
  manual: True

flag megaparsec
  description: megaparsec dependency
  default: False
  manual: True

flag mmorph
  description: mmorph dependency
  default: False
  manual: True

flag monad-ste
  description: monad-ste dependency
  default: False
  manual: True

flag mtl
  description: mtl dependency
  default: False
  manual: True

flag multiset
  description: multiset dependency
  default: False
  manual: True

flag mwc-random
  description: mwc-random dependency
  default: False
  manual: True

flag network
  description: network dependency
  default: False
  manual: True

flag nf
  description: nf dependency
  default: False
  manual: True

flag optparse-applicative
  description: optparse-applicative dependency
  default: False
  manual: True

flag parallel
  description: parallel dependency
  default: False
  manual: True

flag prettyprinter
  description: prettyprinter dependency
  default: False
  manual: True

flag primitive
  description: primitive dependency
  default: False
  manual: True

flag profunctors
  description: profunctors dependency
  default: False
  manual: True

flag psqueues
  description: psqueues dependency
  default: False
  manual: True

flag reactive-banana
  description: reactive-banana dependency
  default: False
  manual: False

flag reflection
  description: reflection dependency
  default: False
  manual: True

flag regex-applicative
  description: regex-applicative dependency
  default: False
  manual: True

flag scientific
  description: scientific dependency
  default: False
  manual: True

flag semigroups
  description: semigroups dependency
  default: False
  manual: True

flag stm
  description: stm dependency
  default: False
  manual: True

flag stm-containers
  description: stm-containers dependency
  default: False
  manual: True

flag tagged
  description: tagged dependency
  default: False
  manual: True

flag text-short
  description: text-short dependency
  default: False
  manual: True

flag time
  description: time dependency
  default: False
  manual: True

flag transformers
  description: transformers dependency
  default: False
  manual: True

flag transformers-base
  description: transformers-base dependency
  default: False
  manual: True

flag typed-process
  description: typed-process dependency
  default: False
  manual: True

flag unagi-chan
  description: unagi-chan dependency
  default: False
  manual: True

flag unix
  description: unix dependency
  default: False
  manual: True

flag unliftio
  description: unliftio dependency
  default: False
  manual: True

flag unordered-containers
  description: unordered-containers dependency
  default: False
  manual: True

flag vector
  description: vector dependency
  default: False
  manual: True

flag weigh
  description: weigh dependency
  default: False
  manual: True

flag writer-cps-mtl
  description: writer-cps-mtl dependency
  default: False
  manual: True

--------------------------------------------------------------------------------
-- Library
--------------------------------------------------------------------------------

library
  hs-source-dirs: .
  ghc-options: -Wall
  default-extensions: NoImplicitPrelude
  default-language: Haskell2010

  -- Reexport base for convenience. Some of these are actually required for
  -- various purposes:
  --
  --   Control.Monad      -- :main
  --   Control.Exception  -- Paths_
  --   Data.Version       -- Paths_
  --   GHC.Base           -- ghci
  --   Prelude            -- Paths_
  --   System.Environment -- ghci
  --   System.IO          -- ghci
  reexported-modules:
      base:Control.Applicative
    , base:Control.Arrow
    , base:Control.Category
    , base:Control.Concurrent
    , base:Control.Concurrent.Chan
    , base:Control.Concurrent.MVar
    , base:Control.Concurrent.QSem
    , base:Control.Concurrent.QSemN
    , base:Control.Exception
    , base:Control.Exception.Base
    , base:Control.Monad
    , base:Control.Monad.Fail
    , base:Control.Monad.Fix
    , base:Control.Monad.Instances
    , base:Control.Monad.IO.Class
    , base:Control.Monad.ST
    , base:Control.Monad.ST.Lazy
    , base:Control.Monad.ST.Lazy.Safe
    , base:Control.Monad.ST.Lazy.Unsafe
    , base:Control.Monad.ST.Safe
    , base:Control.Monad.ST.Strict
    , base:Control.Monad.ST.Unsafe
    , base:Control.Monad.Zip
    , base:Data.Bifoldable
    , base:Data.Bifunctor
    , base:Data.Bitraversable
    , base:Data.Bits
    , base:Data.Bool
    , base:Data.Char
    , base:Data.Coerce
    , base:Data.Complex
    , base:Data.Data
    , base:Data.Dynamic
    , base:Data.Either
    , base:Data.Eq
    , base:Data.Fixed
    , base:Data.Foldable
    , base:Data.Function
    , base:Data.Functor
    , base:Data.Functor.Classes
    , base:Data.Functor.Compose
    , base:Data.Functor.Const
    , base:Data.Functor.Identity
    , base:Data.Functor.Product
    , base:Data.Functor.Sum
    , base:Data.IORef
    , base:Data.Int
    , base:Data.Ix
    , base:Data.Kind
    , base:Data.List
    , base:Data.List.NonEmpty
    , base:Data.Maybe
    , base:Data.Monoid
    , base:Data.Ord
    , base:Data.Proxy
    , base:Data.Ratio
    , base:Data.Semigroup
    , base:Data.STRef
    , base:Data.STRef.Lazy
    , base:Data.STRef.Strict
    , base:Data.String
    , base:Data.Traversable
    , base:Data.Tuple
    , base:Data.Type.Bool
    , base:Data.Type.Coercion
    , base:Data.Type.Equality
    , base:Data.Typeable
    , base:Data.Unique
    , base:Data.Version
    , base:Data.Void
    , base:Data.Word
    , base:Debug.Trace
    , base:Foreign
    , base:Foreign.C
    , base:Foreign.C.Error
    , base:Foreign.C.String
    , base:Foreign.C.Types
    , base:Foreign.Concurrent
    , base:Foreign.ForeignPtr
    , base:Foreign.ForeignPtr.Safe
    , base:Foreign.ForeignPtr.Unsafe
    , base:Foreign.Marshal
    , base:Foreign.Marshal.Alloc
    , base:Foreign.Marshal.Array
    , base:Foreign.Marshal.Error
    , base:Foreign.Marshal.Pool
    , base:Foreign.Marshal.Safe
    , base:Foreign.Marshal.Unsafe
    , base:Foreign.Marshal.Utils
    , base:Foreign.Ptr
    , base:Foreign.Safe
    , base:Foreign.StablePtr
    , base:Foreign.Storable
    , base:GHC.Arr
    , base:GHC.Base
    , base:GHC.Char
    , base:GHC.Conc
    , base:GHC.Conc.IO
    , base:GHC.Conc.Signal
    , base:GHC.Conc.Sync
    , base:GHC.ConsoleHandler
    , base:GHC.Constants
    , base:GHC.Desugar
    , base:GHC.Enum
    , base:GHC.Environment
    , base:GHC.Err
    , base:GHC.Exception
    , base:GHC.ExecutionStack
    , base:GHC.ExecutionStack.Internal
    , base:GHC.Exts
    , base:GHC.Fingerprint
    , base:GHC.Fingerprint.Type
    , base:GHC.Float
    , base:GHC.Float.ConversionUtils
    , base:GHC.Float.RealFracMethods
    , base:GHC.Foreign
    , base:GHC.ForeignPtr
    , base:GHC.GHCi
    , base:GHC.Generics
    , base:GHC.IO
    , base:GHC.IO.Buffer
    , base:GHC.IO.BufferedIO
    , base:GHC.IO.Device
    , base:GHC.IO.Encoding
    , base:GHC.IO.Encoding.CodePage
    , base:GHC.IO.Encoding.Failure
    , base:GHC.IO.Encoding.Iconv
    , base:GHC.IO.Encoding.Latin1
    , base:GHC.IO.Encoding.Types
    , base:GHC.IO.Encoding.UTF16
    , base:GHC.IO.Encoding.UTF32
    , base:GHC.IO.Encoding.UTF8
    , base:GHC.IO.Exception
    , base:GHC.IO.FD
    , base:GHC.IO.Handle
    , base:GHC.IO.Handle.FD
    , base:GHC.IO.Handle.Internals
    , base:GHC.IO.Handle.Lock
    , base:GHC.IO.Handle.Text
    , base:GHC.IO.Handle.Types
    , base:GHC.IO.IOMode
    , base:GHC.IO.Unsafe
    , base:GHC.IOArray
    , base:GHC.IORef
    , base:GHC.Int
    , base:GHC.List
    , base:GHC.MVar
    , base:GHC.Natural
    , base:GHC.Num
    , base:GHC.OldList
    , base:GHC.OverloadedLabels
    , base:GHC.PArr
    , base:GHC.Pack
    , base:GHC.Profiling
    , base:GHC.Ptr
    , base:GHC.Read
    , base:GHC.Real
    , base:GHC.Records
    , base:GHC.RTS.Flags
    , base:GHC.ST
    , base:GHC.StaticPtr
    , base:GHC.STRef
    , base:GHC.Show
    , base:GHC.Stable
    , base:GHC.Stack
    , base:GHC.Stack.CCS
    , base:GHC.Stack.Types
    , base:GHC.Stats
    , base:GHC.Storable
    , base:GHC.TopHandler
    , base:GHC.TypeLits
    , base:GHC.TypeNats
    , base:GHC.Unicode
    , base:GHC.Weak
    , base:GHC.Word
    , base:Numeric
    , base:Numeric.Natural as Base.Numeric.Natural
    , base:Prelude
    , base:System.CPUTime
    , base:System.Console.GetOpt
    , base:System.Environment
    , base:System.Exit
    , base:System.IO
    , base:System.IO.Error
    , base:System.IO.Unsafe
    , base:System.Info
    , base:System.Mem
    , base:System.Mem.StableName
    , base:System.Mem.Weak
    , base:System.Posix.Internals
    , base:System.Posix.Types
    , base:System.Timeout
    , base:Text.ParserCombinators.ReadP
    , base:Text.ParserCombinators.ReadPrec
    , base:Text.Printf
    , base:Text.Read
    , base:Text.Read.Lex
    , base:Text.Show
    , base:Text.Show.Functions
    , base:Type.Reflection
    , base:Type.Reflection.Unsafe
    , base:Unsafe.Coerce
  if impl(ghc >= 8.4)
    reexported-modules:
        base:GHC.ByteOrder
      , base:GHC.Clock
      , base:System.Environment.Blank

  ------------------------------------------------------------------------------
  -- Dependencies
  ------------------------------------------------------------------------------

  build-depends: base >= 4.10 && < 5.0

  if flag(aeson)
    build-depends: aeson ^>= 1.3
    cpp-options: -DUSE_AESON

  if flag(ansi-terminal)
    build-depends: ansi-terminal ^>= 0.8
    cpp-options: -DUSE_ANSI_TERMINAL

  if flag(async)
    build-depends: async ^>= 2.2
    cpp-options: -DUSE_ASYNC

  if flag(atomic-primops)
    build-depends: atomic-primops ^>= 0.8
    cpp-options: -DUSE_ATOMIC_PRIMOPS

  if flag(bits)
    build-depends: bits ^>= 0.5
    cpp-options: -DUSE_BITS

  if flag(bytestring)
    build-depends: bytestring ^>= 0.10
    cpp-options: -DUSE_BYTESTRING

  if flag(bytestring-trie)
    build-depends: bytestring-trie ^>= 0.2
    cpp-options: -DUSE_BYTESTRING_TRIE

  if flag(comonad)
    build-depends: comonad ^>= 5.0
    cpp-options: -DUSE_COMONAD

  if flag(compact)
    build-depends: compact ^>= 0.1
    cpp-options: -DUSE_COMPACT

  if flag(constraints)
    build-depends: constraints ^>= 0.10
    cpp-options: -DUSE_CONSTRAINTS

  if flag(containers)
    build-depends: containers ^>= 0.5
    cpp-options: -DUSE_CONTAINERS

  if flag(contravariant)
    build-depends: contravariant ^>= 1.4
    cpp-options: -DUSE_CONTRAVARIANT

  if flag(contravariant-extras)
    build-depends: contravariant-extras ^>= 0.3
    cpp-options: -DUSE_CONTRAVARIANT_EXTRAS

  if flag(deepseq)
    build-depends: deepseq ^>= 1.4.3
    cpp-options: -DUSE_DEEPSEQ

  if flag(distributive)
    build-depends: distributive ^>= 0.5
    cpp-options: -DUSE_DISTRIBUTIVE

  if flag(dlist)
    build-depends: dlist ^>= 0.8
    cpp-options: -DUSE_DLIST

  if flag(erf)
    build-depends: erf ^>= 2.0
    cpp-options: -DUSE_ERF

  if flag(extra)
    build-depends: extra ^>= 1.6
    cpp-options: -DUSE_EXTRA

  if flag(filepath)
    build-depends: filepath ^>= 1.4
    cpp-options: -DUSE_FILEPATH

  if flag(foldl)
    build-depends: foldl ^>= 1.4
    cpp-options: -DUSE_FOLDL

  if flag(gauge)
    build-depends: gauge ^>= 0.2
    cpp-options: -DUSE_GAUGE

  if flag(hashable)
    build-depends: hashable ^>= 1.2
    cpp-options: -DUSE_HASHABLE

  if flag(heaps)
    build-depends: heaps ^>= 0.3
    cpp-options: -DUSE_HEAPS

  if flag(hedgehog)
    build-depends: hedgehog ^>= 0.5
    cpp-options: -DUSE_HEDGEHOG

  if flag(lens)
    build-depends: lens ^>= 4.16
    cpp-options: -DUSE_LENS

  if flag(list-transformer)
    build-depends: list-transformer ^>= 1.0.4
    cpp-options: -DUSE_LIST_TRANSFORMER

  if flag(logict)
    build-depends: logict ^>= 0.6
    cpp-options: -DUSE_LOGICT

  if flag(managed)
    build-depends: managed ^>= 1.0
    cpp-options: -DUSE_MANAGED

  if flag(megaparsec)
    build-depends: megaparsec ^>= 6.5
    cpp-options: -DUSE_MEGAPARSEC

  if flag(mmorph)
    build-depends: mmorph ^>= 1.1
    cpp-options: -DUSE_MMORPH

  if flag(monad-ste)
    build-depends: monad-ste ^>= 0.1
    cpp-options: -DUSE_MONAD_STE

  if flag(mtl)
    build-depends: mtl ^>= 2.2
    cpp-options: -DUSE_MTL

  if flag(multiset)
    build-depends: multiset ^>= 0.3
    cpp-options: -DUSE_MULTISET

  if flag(mwc-random)
    build-depends: mwc-random ^>= 0.13
    cpp-options: -DUSE_MWC_RANDOM

  if flag(network)
    build-depends: network ^>= 2.7
    cpp-options: -DUSE_NETWORK

  if flag(nf)
    build-depends: nf ^>= 1.0
    cpp-options: -DUSE_NF

  if flag(optparse-applicative)
    build-depends: optparse-applicative ^>= 0.14
    cpp-options: -DUSE_OPTPARSE_APPLICATIVE

  if flag(parallel)
    build-depends: parallel ^>= 3.2
    cpp-options: -DUSE_PARALLEL

  if flag(prettyprinter)
    build-depends: prettyprinter ^>= 1.2
    cpp-options: -DUSE_PRETTYPRINTER

  if flag(primitive)
    build-depends: primitive ^>= 0.6
    cpp-options: -DUSE_PRIMITIVE

  if flag(profunctors)
    build-depends: profunctors ^>= 5.2
    cpp-options: -DUSE_PROFUNCTORS

  if flag(psqueues)
    build-depends: psqueues ^>= 0.2
    cpp-options: -DUSE_PSQUEUES

  if flag(reactive-banana)
    build-depends: reactive-banana ^>= 1.2
    cpp-options: -DUSE_REACTIVE_BANANA

  if flag(reflection)
    build-depends: reflection ^>= 2.1
    cpp-options: -DUSE_REFLECTION

  if flag(regex-applicative)
    build-depends: regex-applicative ^>= 0.3
    cpp-options: -DUSE_REGEX_APPLICATIVE

  if flag(scientific)
    build-depends: scientific ^>= 0.3
    cpp-options: -DUSE_SCIENTIFIC

  if flag(semigroups)
    build-depends: semigroups ^>= 0.18
    cpp-options: -DUSE_SEMIGROUPS

  if flag(stm)
    build-depends: stm ^>= 2.4.5
    cpp-options: -DUSE_STM

  if flag(stm-containers)
    build-depends: stm-containers ^>= 0.2
    cpp-options: -DUSE_STM_CONTAINERS

  if flag(tagged)
    build-depends: tagged ^>= 0.8
    cpp-options: -DUSE_TAGGED

  if flag(text)
    build-depends: text ^>= 1.2
    cpp-options: -DUSE_TEXT

  if flag(text-short)
    build-depends: text-short ^>= 0.1
    cpp-options: -DUSE_TEXT_SHORT

  if flag(time)
    build-depends: time ^>= 1.8 || ^>= 1.9
    cpp-options: -DUSE_TIME

  if flag(transformers)
    build-depends: transformers ^>= 0.5
    cpp-options: -DUSE_TRANSFORMERS

  if flag(transformers-base)
    build-depends: transformers-base ^>= 0.4
    cpp-options: -DUSE_TRANSFORMERS_BASE

  if flag(typed-process)
    build-depends: typed-process ^>= 0.2
    cpp-options: -DUSE_TYPED_PROCESS

  if flag(unagi-chan)
    build-depends: unagi-chan ^>= 0.4
    cpp-options: -DUSE_UNAGI_CHAN

  if flag(unix)
    build-depends: unix ^>= 2.7
    cpp-options: -DUSE_UNIX

  if flag(unliftio)
    build-depends: unliftio ^>= 0.2.7.0
    cpp-options: -DUSE_UNLIFTIO

  if flag(unordered-containers)
    build-depends: unordered-containers ^>= 0.2
    cpp-options: -DUSE_UNORDERED_CONTAINERS

  if flag(vector)
    build-depends: vector ^>= 0.12
    cpp-options: -DUSE_VECTOR

  if flag(weigh)
    build-depends: weigh ^>= 0.0
    cpp-options: -DUSE_WEIGH

  if flag(writer-cps-mtl)
    build-depends: writer-cps-mtl ^>= 0.1
    cpp-options: -DUSE_WRITER_CPS_MTL

  ------------------------------------------------------------------------------
  -- Exposed modules
  ------------------------------------------------------------------------------

  exposed-modules:
    Alternative
    Applicative
    Bifoldable
    Bifoldable.Partial
    Bifunctor
    Bitraversable
    Bits
    Bool
    Bounded
    Category
    Char
    Clock
    Coerce
    Compose
    Concurrency
    Const
    Data
    Debug
    Dynamic
    Either
    Enum
    Environment
    Equality
    Error
    Eval
    Exception
    Field
    File
    File.Text
    Foldable
    Foldable.Partial
    Function
    Functor
    Generic
    IO
    IORef
    Identity
    Ix
    Label
    List
    List.Partial
    List1
    List1.Partial
    MVar
    Maybe
    Mitchell
    Monad
    MonadFail
    MonadFix
    MonadIO
    MonadPlus
    MonadZip
    Monoid
    Numeric.Complex
    Numeric.Double
    Numeric.Floating
    Numeric.Fractional
    Numeric.Int
    Numeric.Int8
    Numeric.Int16
    Numeric.Int32
    Numeric.Int64
    Numeric.Integer
    Numeric.Integral
    Numeric.Float
    Numeric.Nat
    Numeric.Natural
    Numeric.Num
    Numeric.Product
    Numeric.Ratio
    Numeric.Real
    Numeric.RealFloat
    Numeric.RealFrac
    Numeric.Sum
    Numeric.Word
    Numeric.Word8
    Numeric.Word16
    Numeric.Word32
    Numeric.Word64
    Ord
    Parallelism
    Posix
    Printf
    Product
    Proxy
    Ptr
    Ptr.Foreign
    Ptr.Fun
    Ptr.Stable
    Ptr.Static
    Ptr.Weak
    QSem
    RTS
    Read
    Read.Partial
    ST
    Semigroup
    Show
    StableName
    Storable
    String
    Sum
    System
    Traversable
    Tuple
    Type
    Typeable
    Unique
    Version
    Void

  if flag(aeson)
    exposed-modules:
      Json.Decode
      Json.Encode

  if flag(ansi-terminal)
    exposed-modules:
      Terminal

  if flag(atomic-primops)
    exposed-modules:
      Counter

  if flag(bytestring)
    exposed-modules:
      ByteString
      ByteString.Lazy
      ByteString.Partial
      ByteString.Short

  if flag(bytestring) || flag(unliftio)
    exposed-modules:
      File.Binary

  if flag(bytestring-trie)
    exposed-modules:
      Trie

  if flag(comonad)
    exposed-modules:
      Comonad
      ComonadApply

  if flag(compact)
    exposed-modules:
      Compact

  if flag(constraints)
    exposed-modules:
      Constraint

  if flag(contravariant)
    exposed-modules:
      Contravariant
      Predicate

  if flag(contravariant) || flag(contravariant-extras)
    exposed-modules:
      Decidable
      Divisible

  if flag(containers)
    exposed-modules:
      Graph
      IntMap
      IntMap.Lazy
      IntSet
      Map
      Map.Lazy
      Sequence
      Set
      Tree

  if flag(distributive)
    exposed-modules:
      Distributive

  if flag(dlist)
    exposed-modules:
      DList
      DList.Partial

  if flag(erf)
    exposed-modules:
      Numeric.Erf
      Numeric.InvErf

  if flag(foldl)
    exposed-modules:
      Foldl

  if flag(gauge)
    exposed-modules:
      Benchmark

  if flag(hashable)
    exposed-modules:
      Hashable

  if flag(heaps)
    exposed-modules:
      Heap

  if flag(hedgehog)
    exposed-modules:
      Test
      Test.Gen
      Test.Range

  if flag(lens)
    exposed-modules:
      Optic.Iso
      Optic.Lens
      Optic.Prism
      Optic.Traversal

  if flag(list-transformer)
    exposed-modules:
      ListT

  if flag(logict)
    exposed-modules:
      Logic

  if flag(optparse-applicative)
    exposed-modules:
      Optparse

  if flag(prettyprinter)
    exposed-modules:
      Pretty

  if flag(primitive)
    exposed-modules:
      Prim

  if flag(psqueues)
    exposed-modules:
      HashPSQ
      IntPSQ
      OrdPSQ

  if flag(managed)
    exposed-modules:
      Managed

  if flag(megaparsec)
    exposed-modules:
      Parser.Text
      Parser.Binary

  if flag(mmorph)
    exposed-modules:
      MFunctor
      MMonad

  if flag(mtl) || flag(transformers)
    exposed-modules:
      Cont
      Except
      Reader
      State

  if flag(multiset)
    exposed-modules:
      IntMultiSet
      MultiSet

  if flag(mwc-random)
    exposed-modules:
      Random

  if flag(network)
    exposed-modules:
      Socket

  if flag(profunctors)
    exposed-modules:
      Profunctor

  if flag(reactive-banana)
    exposed-modules:
      FRP

  if flag(reflection)
    exposed-modules:
      Reflection

  if flag(regex-applicative)
    exposed-modules:
      Regex

  if flag(scientific)
    exposed-modules:
      Numeric.Scientific

  if flag(stm)
    exposed-modules:
      TSem

  if flag(stm) || flag(unliftio)
    exposed-modules:
      TBQueue
      TChan
      TMVar
      TVar

  if flag(stm-containers)
    exposed-modules:
      TBimap
      TMap
      TMultimap
      TSet

  if flag(tagged)
    exposed-modules:
      Tagged

  if flag(text)
    exposed-modules:
      Text
      Text.Lazy

  if flag(text-short)
    exposed-modules:
      Text.Short
      Text.Short.Partial
      Text.Short.Unsafe

  if flag(time)
    exposed-modules:
      Time

  if flag(transformers)
    exposed-modules:
      MaybeT
      MonadTrans

  if flag(transformers-base)
    exposed-modules:
      MonadBase

  if flag(typed-process) || flag(unix)
    exposed-modules:
      Process

  if flag(unagi-chan)
    exposed-modules:
      Chan

  if flag(unordered-containers)
    exposed-modules:
      HashMap
      HashSet

  if flag(vector)
    exposed-modules:
      Vector
      Vector.Generic
      Vector.Mutable
      Vector.Primitive
      Vector.Storable
      Vector.Unboxed

  if flag(weigh)
    exposed-modules:
      Weigh

  if flag(writer-cps-mtl)
    exposed-modules:
      Writer

--------------------------------------------------------------------------------
-- Benchmarks
--------------------------------------------------------------------------------

benchmark semaphore
  hs-source-dirs: bench
  main-is: Semaphore.hs
  ghc-options: -Wall
  type: exitcode-stdio-1.0
  ghc-options: -O -rtsopts -threaded "-with-rtsopts=-N4 -qg"
  build-depends: mitchell-stdlib
  default-language: Haskell2010
